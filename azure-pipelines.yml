variables:
  LD_LIBRARY_PATH: /usr/local/lib
  HOMEBREW_CURL_RETRIES: 5
  CI: true

trigger: ['master']

jobs:
  - job: osx_64
    timeoutInMinutes: 120
    cancelTimeoutInMinutes: 30
    pool:
      vmImage: macOS-10.14
    strategy:
      matrix:
        fgsl_nogui_noocl:
          EXTRA: --disable-gui --disable-updater --disable-opencl
          HOMEBREW_EXTRA: gsl
          USE_FGSL: True
        fgsl_nogui_ocl:
          EXTRA: --disable-gui --disable-updater --enable-opencl
          HOMEBREW_EXTRA: gsl
          USE_FGSL: True
        easyrng_nogui_noocl:
          EXTRA: --disable-gui --disable-updater --disable-opencl
          USE_EASYRNG: True
        easyrng_nogui_ocl:
          EXTRA: --disable-gui --disable-updater --enable-opencl
          USE_EASYRNG: True
        easyrng_gui_noupdater_noocl_noga:
          EXTRA: --enable-gui --disable-updater --disable-opencl --disable-google-analytics
          USE_EASYRNG: True
          HOMEBREW_EXTRA: tschoonj/tap/gtkmm-plplot libpeas
        easyrng_gui_updater_noocl_noga:
          EXTRA: --enable-gui --enable-updater --disable-opencl --disable-google-analytics
          USE_EASYRNG: True
          HOMEBREW_EXTRA: tschoonj/tap/gtkmm-plplot libpeas json-glib
        easyrng_gui_noupdater_ocl_noga:
          EXTRA: --enable-gui --disable-updater --enable-opencl --disable-google-analytics
          USE_EASYRNG: True
          HOMEBREW_EXTRA: tschoonj/tap/gtkmm-plplot libpeas
        easyrng_gui_updater_ocl_noga:
          EXTRA: --enable-gui --enable-updater --enable-opencl --disable-google-analytics
          USE_EASYRNG: True
          HOMEBREW_EXTRA: tschoonj/tap/gtkmm-plplot libpeas json-glib
        easyrng_gui_noupdater_noocl_ga:
          EXTRA: --enable-gui --disable-updater --disable-opencl --enable-google-analytics
          USE_EASYRNG: True
          HOMEBREW_EXTRA: tschoonj/tap/gtkmm-plplot libpeas
        easyrng_gui_updater_noocl_ga:
          EXTRA: --enable-gui --enable-updater --disable-opencl --enable-google-analytics
          USE_EASYRNG: True
          HOMEBREW_EXTRA: tschoonj/tap/gtkmm-plplot libpeas json-glib
        easyrng_gui_noupdater_ocl_ga:
          EXTRA: --enable-gui --disable-updater --enable-opencl --enable-google-analytics
          USE_EASYRNG: True
          HOMEBREW_EXTRA: tschoonj/tap/gtkmm-plplot libpeas
        easyrng_gui_updater_ocl_ga:
          EXTRA: --enable-gui --enable-updater --enable-opencl --enable-google-analytics
          USE_EASYRNG: True
          HOMEBREW_EXTRA: tschoonj/tap/gtkmm-plplot libpeas json-glib
        easyrng_gui_updater_ocl_ga_app:
          EXTRA: --enable-gui --enable-updater --enable-opencl --enable-google-analytics --enable-mac-integration
          USE_EASYRNG: True
          HOMEBREW_EXTRA: tschoonj/tap/gtkmm-plplot libpeas json-glib
      
      
    steps:
    - script: |
        set -e -x
        brew uninstall --force --ignore-dependencies $(brew list) || exit 1
        brew update
        brew upgrade
        brew cleanup -s
      displayName: Remove all Homebrew packages
    - script: |
        set -e -x
        brew install autoconf automake libtool wget pkg-config libxslt hdf5 libsoup pygobject3 bash swig numpy gcc llvm librsvg
        /usr/local/bin/pip3 install lxml
      displayName: Install shared Homebrew dependencies

    - script: |
        set -e -x
        brew install $HOMEBREW_EXTRA
      displayName: Install extra Homebrew dependencies
      condition: ne(variables['HOMEBREW_EXTRA'], '')

    - script: |
        set -e -x
        brew install tschoonj/tap/fgsl
      displayName: Install FGSL
      condition: eq(variables['USE_FGSL'], True)

    - script: |
        set -e -x
        brew install tschoonj/tap/easyRNG
      displayName: Install easyRNG
      condition: eq(variables['USE_EASYRNG'], True)

    - script: |
        set -e -x
        brew install tschoonj/tap/xraylib
      displayName: Install xraylib

    - script: |
        set -e -x
        autoreconf -fi
        ./configure $EXTRA --enable-custom-detector-response --disable-static --enable-introspection SHELL=/usr/local/bin/bash
        make
        make check
      displayName: Test build
      env:
        CC: /usr/local/opt/llvm/bin/clang
        CXX: /usr/local/opt/llvm/bin/clang++
        FC: gfortran
        OBJC: /usr/local/opt/llvm/bin/clang
        LIBS: -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib
        CPPFLAGS: -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libxml2 -I/usr/local/opt/boost/include
        PKG_CONFIG_PATH: /usr/local/lib/pkgconfig:/usr/local/opt/libffi/lib/pkgconfig:/usr/local/opt/icu4c/lib/pkgconfig
        PYTHON: /usr/local/bin/python3

    - script: |
        cd tests
        ls -l
        cat test*.log
      displayName: Print test
      condition: failed()

  - job: windows_64
    timeoutInMinutes: 120
    cancelTimeoutInMinutes: 30
    pool:
      vmImage: vs2017-win2016
    variables:
      compiler: msvc_msys2
      ARCH: x64
      MSYS2_ARCH: x86_64
      MSYS2_DIR: msys64
      MSYSTEM: MINGW64
    strategy:
      matrix:
        fgsl_gui_noupdater:
          UPDATER: false
          RNG: fgsl
          PLOT: gtkmm-plplot
        fgsl_gui_withupdater:
          UPDATER: true
          RNG: fgsl
          PLOT: gtkmm-plplot
        fgsl_nogui:
          RNG: fgsl
        easyrng_gui_noupdater:
          UPDATER: false
          RNG: easyRNG
          PLOT: gtkmm-plplot
        easyrng_gui_withupdater:
          UPDATER: true
          RNG: easyRNG
          PLOT: gtkmm-plplot
        easyrng_nogui:
          RNG: easyRNG
    steps:
    - script: |
        choco uninstall openssl.light
      displayName: Uninstall openssl.light
    - script: |
        choco install msys2 --params="/InstallDir:C:\msys64 /NoUpdate /NoPath"
      displayName: Install MSYS2
    - script: |
        set PATH=C:\msys64\usr\bin;%PATH%
        pacman --noconfirm -Syyuu
        pacman --noconfirm -Syu
      displayName: Update MSYS2
    - script: |
        set PATH=C:\msys64\usr\bin;%PATH%
        pacman --noconfirm --ask 20 -Su mingw-w64-%MSYS2_ARCH%-{gcc,libtool,curl,gcc-fortran,libxslt,glib2,libsoup,python3-gobject,pygobject-devel,gobject-introspection,python3-numpy,python3-certifi,swig,python3-scipy,cython} automake autoconf make wget tar git patch
      displayName: Install MSYS2 packages
    - script: |
        set PATH=C:\msys64\%MSYSTEM%\bin;C:\msys64\usr\bin;%PATH%
        bash -lc "cd $SOURCE_HOME && unset BOOST_ROOT && exec ./appveyor-before-build.sh"
      displayName: Build dependencies
      env:
        SOURCE_HOME: $(Build.SourcesDirectory)
    - script: |
        set PATH=C:\msys64\%MSYSTEM%\bin;C:\msys64\usr\bin;%PATH%
        bash -lc "cd $SOURCE_HOME && exec ./appveyor-build-script.sh"
      displayName: Build XMI-MSIM
      env:
        SOURCE_HOME: $(Build.SourcesDirectory)
    - script: |
        set PATH=C:\msys64\%MSYSTEM%\bin;C:\msys64\usr\bin;%PATH%
        bash -lc "cd $SOURCE_HOME/tests && cat test-*.log"
      displayName: Print test results
      env:
        SOURCE_HOME: $(Build.SourcesDirectory)
      condition: failed()
